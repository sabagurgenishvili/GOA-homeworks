; """
; შექმენით ფუნქცია სახელად manual_pop, რომელსაც გადაეცემა სია და
; ასევე შესაძლოა ინდექსი. როდესაც გადაეცემა ინდექსი, სიიდან უნდა ამოიშალოს
; ამ ინდექსზე მყოფი ელემენტი და დაბრუნდეს სია ამ სახით. თუ ფუნქციას არ გადაეცემა
; index, მაშინ default მნიშვნელობა უნდა იყოს სიის ბოლო ელემენტი - ზოგადად pop
; როგორც მუშაობს. ამ დავალებაში რათქმაუნდა pop არ უნდა გამოიყენოთ
; """


; def manual_pop(arr, a=-1):
;     arr.remove(arr[a])
;     return arr


; print(manual_pop([1, 2, 3, 4, 5, 12], 0))


; """
; შექმენით ფუნქცია სახელად manual_count: ფუნქციას გადაეცემა
; სია და ასევე შესაძლოა ელემენტი. როდესაც ფუნქციას ელემენტიც
; გადაეცემა, თქვენ უნდა დაითვალოთ სიაში ამ ელემენტის რაოდენობა,
; არ გამოიყენოთ count. როდესაც არ გადაეცემა ელემენტი, მისთვის
; გამოიყენეთ default მნიშვნელობა და გაუტოლეთ საწყისი სიის საშუალო
; არითმეტიკულს, ოღონდ მთელი რიცხვის სახით (int(აქ საშუალოს კოდი)).
; """


; def manual_count(arr, a):
;     counter = 0
;     for i in arr:
;         if i == a:
;             counter += 1
;     return counter


; print(manual_count([1, 2, 3, 1, 2, 2, 1, 1, 1, 1], 3))


; """
; შექმენით ფუნქცია სახელად manual_min, რომელსაც შესაძლოა
; გადაეცეს მთელი რიცხვების სია - გაიხსენეთ function default
; argument. თუ ფუნქციას სია გადაეცემა, დააბრუნეთ ამ სიის მინიმალური
; მნიშვნელობა, არ გამოიყენოთ min. თუ ფუნქციას არ გადაეცემა სია,
; მაშინ იმუშავეთ 1-იდან 10-ის ჩათვლით არსებული მთელი რიცხვების სიაზე.
; """


; def manual_min(arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]):
;     min = arr[0]
;     for i in arr:
;         if i < min:
;             min = i
;     return min


; print(manual_min())
; [3:03 PM]
; """
; შექმენით ფუნქცია სახელად manual_max, რომელსაც შესაძლოა
; გადაეცეს მთელი რიცხვების სია - გაიხსენეთ function default 
; argument. თუ ფუნქციას სია გადაეცემა, დააბრუნეთ ამ სიის მაქსიმალური
; მნიშვნელობა, არ გამოიყენოთ max. თუ ფუნქციას არ გადაეცემა სია, 
; მაშინ იმუშავეთ 1-იდან 10-ის ჩათვლით არსებული მთელი რიცხვების სიაზე.
; """


; def manual_max(arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]):
;     max = arr[0]
;     for i in arr:
;         if i > max:
;             max = i
;     return max


; print(manual_max([1, 2, 3, 4, 5, 6, 7, 123, 456, 123, 123,]))



